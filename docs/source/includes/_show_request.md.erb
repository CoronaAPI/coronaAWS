## Retrieve a particular <%= t(".resource_name", scope: resource) %>

<% unless t('.gecko.unavailable', scope: resource) == true %>
<% sample_resource_id = t(".gecko.show.id", scope: resource).is_a?(Integer) ? t(".gecko.show.id", scope: resource) : 1 %>
```ruby
require 'gecko-ruby'
gecko = Gecko::Client.new(<OAUTH_ID>, <OAUTH_SECRET>)
access_token = OAuth2::AccessToken.new(gecko.oauth_client, <ACCESS_TOKEN>)
gecko.access_token = access_token
gecko.<%= t(".resource_klass", scope: resource) %>.find(<%= sample_resource_id %>)
```
<% end %>

<% plural_name = t(".resource_plural", scope: resource) %>
<% resource_path = t(".resource_path", scope: resource).include?("missing") ? plural_name : t(".resource_path", scope: resource) %>
```shell
curl -X GET -H "Content-type: application/json" -H "Authorization: Bearer <ACCESS_TOKEN>"
https://api.tradegecko.com/<%= resource_path %>/<%= sample_resource_id %>
```

```json
{
  "<%= t(".resource_name", scope: resource) %>": <%= json_single %>
}
```

Retrieves the details of an existing <%= t(".resource_name", scope: resource) %>. You need only supply the unique <%= t(".resource_name", scope: resource) %> identifier that was returned upon <%= t(".resource_name", scope: resource) %> creation.

### HTTP Request
`GET https://api.tradegecko.com/<%= resource_path %>/{RESOURCE_ID}`
