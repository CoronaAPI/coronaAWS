## Update <%= t(".resource_article", scope: resource) %> <%= t(".resource_name", scope: resource) %>
<% unless t('.gecko.unavailable', scope: resource) == true %>

<% plural_name = t(".resource_plural", scope: resource) %>
<% resource_path = t(".resource_path", scope: resource).include?("missing") ? plural_name : t(".resource_path", scope: resource) %>

```ruby
require 'gecko-ruby'
gecko = Gecko::Client.new(<OAUTH_ID>, <OAUTH_SECRET>)
access_token = OAuth2::AccessToken.new(gecko.oauth_client, <ACCESS_TOKEN>)
gecko.access_token = access_token
<%= t(".resource_name", scope: resource) %> = gecko.<%= t(".resource_klass", scope: resource) %>.find(1)
<%= t(".resource_name", scope: resource) %>.attributes = {
  rate: "12.0",
}
<%= t(".resource_name", scope: resource) %>.save
```
<% end %>

```shell
curl -X PUT -H "Content-type: application/json" -H "Authorization: Bearer <ACCESS_TOKEN>"
https://api.tradegecko.com/<%= resource_path %>/1 -d '{"<%= t(".resource_name", scope: resource) %>":<%= t('.gecko.update', scope: resource).to_json %>}'
```

> Response
>
> Returns 204 status when the <%= t(".resource_name", scope: resource) %> gets updated successfully.


Updates the specified <%= t(".resource_name", scope: resource) %> by setting the values of the parameters passed.

Any parameters not provided will be left unchanged.
This request accepts the same arguments as the <%= t(".resource_name", scope: resource) %> creation call.

### HTTP Request
`PUT https://api.tradegecko.com/<%= resource_path %>/{RESOURCE_ID}`
