.footer-wrapper {
  position: relative;

  .container {
    margin-top:75px;
  }

  legend {
    margin-top: 20px;
    color: #a4aeb3;
    font-size: 13px;
    line-height: 18px;
  }
}


.footer-moko {
    width: 80px;
    height: 91px;
    background: url('/images/moko.svg');
    background-size: auto auto;
    background-size: contain;
    overflow: hidden;
}

@media (max-width: 768px) {
  .feedback-banner {
    h2 {
      display: none !important;
    }
  }
  
  .corner-ribbon-bounds {
    display: none;
  }
  .footer-wrapper {
    display: none;
  }
}

@function sq($r) {
  @return $r * $r;
}

@function sqrt($r) {
  $x0: 1;
  $x1: $x0;

  @for $i from 1 through 1000 {
    $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
    $x0: $x1;
  }

  @return $x1;
}

$ribbon-wrap-amount-tight: 2; // this is in pixels
$ribbon-wrap-amount: 5;
$ribbon-wrap-amount-loose: 10;
$ribbon-side-padding: 20;
$ribbon-color: orange;

$ribbon-types: (
  moko: (
    primary-color: #5960ce,
    secondary-color: #53569f,
    hover-color: #757be4,
  ),
);

 /*{#
  * DO NOT EDIT THIS DIRECTLY
  *
  * Your work is liable to be overwritten
  *
  * Edit and copy the compiled result from here:
  *   https://codepen.io/TradeGecko/pen/XzNmoY
  *
#}*/
.corner-ribbon-bounds {
  position: absolute;
  top: -$ribbon-wrap-amount * 1px - 1px;
  left: -$ribbon-wrap-amount * 1px - 1px;
  width: calc(100% + #{$ribbon-wrap-amount * 1px});
  height: calc(100% + #{$ribbon-wrap-amount * 1px});
  overflow: hidden;
  pointer-events: none;

  &--tight {
    top: -$ribbon-wrap-amount-tight * 1px;
    left: -$ribbon-wrap-amount-tight * 1px;
    width: calc(100% + #{$ribbon-wrap-amount-tight * 1px});
    height: calc(100% + #{$ribbon-wrap-amount-tight * 1px});
  }

  &--loose {
    top: -$ribbon-wrap-amount-loose * 1px;
    left: -$ribbon-wrap-amount-loose * 1px;
    width: calc(100% + #{$ribbon-wrap-amount-loose * 1px});
    height: calc(100% + #{$ribbon-wrap-amount-loose * 1px});
  }
}

.corner-ribbon,
a.corner-ribbon,
h6.corner-ribbon {
  color: white;
  position: absolute;
  top: 0;
  left: 0;
  padding: 8px #{(20 + $ribbon-side-padding) * 1px};
  margin: 0;
  transform-origin: 0 100%;
  transform: translateY(-100%)
             rotate(-90deg)
             translateX(#{ sqrt( sq(100) / 2) * -1% })
             rotate(45deg);
  text-transform: uppercase;
  font-size: 12px;
  font-family: "open sans";
  font-weight: 700;
  will-change: transform;
  pointer-events: auto;
  text-decoration: none;
  transition: background-color 0.2s;


  @each $type-name, $type in $ribbon-types {
    &--#{ $type-name } {
      background: map-get($type, primary-color);
      &:hover {
        background: map-get($type, hover-color);
        text-shadow: 1px 1px 1px rgba(0,0,0,0.2);
        text-decoration: none;
      }
      &::before,
      &::after {
        border-color: map-get($type, secondary-color);
      }
    }
  }

  &::before,
  &::after {
    content: '';
    position: absolute;
    top: 100%;
    width: 0;
    //border-width: 5px;
    border-width: sqrt(sq($ribbon-wrap-amount / 2) * 2) * 1px;
    border-style: solid;
    border-bottom-color: transparent;

    .corner-ribbon-bounds--tight & {
      border-width: sqrt(sq($ribbon-wrap-amount-tight / 2) * 2) * 1px;
    }

    .corner-ribbon-bounds--loose & {
      border-width: sqrt(sq($ribbon-wrap-amount-loose / 2) * 2) * 1px;
    }
  }

  &::before {
    left: 0;
    border-right-color: transparent;
  }

  &::after {
    right: 0;
    border-left-color: transparent;
  }
}

/*
 * STOP COPYING HERE!
 */
html, body {
  height: 100%;
  background: #f4f4f5;
}

.box {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 600px;
  height: 400px;
  background: white;
  box-shadow: 0 3px 10px rgba(0,0,0,0.3);
}

/*
 * You're copying too much!
 * Go back up!
 *
 */
